@model GameChanger.Models.UserAccount

@{
    ViewData["Title"] = "NuevoUsuario";
}

<h1>Crear Nuevo Usuario</h1>

<h4>Ingrese sus datos personales</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="New" asp-controller="UserAccount">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="UserName" class="control-label">Nombre de Usuario</label>
                <input type="text" name="UserName" value="@Model.UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"> </span>             @* Esta linea valida lo que ingresa el usuario; Es lo mismo que:  @Html.ValidationMessageFor(x => x.UserName)*@
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label">Correo Electrónico</label>
                <input asp-for="Email" value="@Model.Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DNI" class="control-label">Número de Documento</label>
                <input asp-for="DNI" value="@Model.DNI" class="form-control" />
                <span asp-validation-for="DNI" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label">Nombre/s</label>
                <input asp-for="Name" value="@Model.Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Surname" class="control-label">Apellido/s</label>
                <input asp-for="Surname" value="@Model.Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>

            @* <div class="form-group">
            <label asp-for="IdCountry" class="control-label">Pais</label>
            <input asp-for="IdCountry" value="@Model.IdCountry" class="form-control" />
            <span asp-validation-for="IdCountry" class="text-danger"></span>
            </div>*@

            <div class="form-group">
                <label class="control-label">Pais</label>
                <input type="text" readonly value="Argentina" class="form-control" />
            </div>


            <div class="form-group">
                <label class="control-label">Provincia</label>
                <select name="IdProvince">
                    @foreach (Province prov in ViewBag.Provinces)
                    {
                        @if (@Model.IdProvince != 0 && @Model.IdProvince == prov.Id)
                        {
                            <option value="@prov.Id" selected>@prov.Name</option>
                        }
                        else
                        {
                            <option value="@prov.Id">@prov.Name</option>
                        }
                    }
                </select>  

            </div>

            <div class="form-group">
                <label asp-for="BirthDate" class="control-label">Fecha de Nacimiento</label>
                <input asp-for="BirthDate" class="form-control" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password" class="control-label">Contraseña</label>
                <input type="Password" id="password" value="@Model.Password" name="Password" onfocusout="ValidatePassStrength()" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
                <label hidden id="validacionPass"> </label>
                
            </div>

            <div class="form-group">
                <label class="control-label">Repita Contraseña</label>
                <input type="password" id="password2" value="@Model.Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" onclick="ComprobarPasswordsIdenticas()" value="Registrarse" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script type="text/javascript">

    function ComprobarPasswordsIdenticas() {
        let ctrlpass1;
        let ctrlpass2;
        ctrlpass1 = document.getElementById("password");
        ctrlpass2 = document.getElementById("password2");

        if (ctrlpass1.value != ctrlpass2.value) {
            alert("las contraseñas ingresadas no son iguales");
            event.stopPropagation();
            event.preventDefault();
        }
    }

    function ValidatePassStrength() {
        checkForNumber();
        checkForLength();
        checkForUpper();
    }

    function checkForNumber() {
        let password = document.getElementById("password").value;
        let hasANumber = false;
        for (let i = 0; i < password.length; i++) {
            let char = password.charAt(i);
            if (!isNaN(char)) {
                hasANumber = true;
            }
        }

        if (!hasANumber) {
            document.getElementById("validacionPass").removeAttribute("hidden");
            document.getElementById("validacionPass").setAttribute("class", "text-danger");
            document.getElementById("validacionPass").innerHTML = "La Contraseña debe contener al menos un Número, una Mayúscula y un Caracter";

        }
        else {
            document.getElementById("validacionPass").setAttribute("hidden", "hidden");

        }

    }

    function checkForLength() 
    {
        let intForLength
        let ctrlLength
        ctrlLength = document.getElementById("password").value;


        intForLength = ctrlLength.length;
        if (intForLength > 16 || intForLength < 8) 
        {
            document.getElementById("validacionPass").removeAttribute("hidden");
            document.getElementById("validacionPass").setAttribute("class", "text-danger");
            document.getElementById("validacionPass").innerHTML ="La Contraseña debe contener entre 8 y 16 caracteres";
            
        }
        else 
        {
            document.getElementById("validacionPass").setAttribute("hidden", "hidden");

        }


    }

    function checkForUpper()  
    {
        let passOriginal= document.getElementById("password").value;
        let passLower = passOriginal.toLowerCase();
        let passUpper = passOriginal.toUpperCase();
        let hasAnUpper= false;

        for (let i = 0; i < passOriginal.length; i++) {
            let charOrig = passOriginal.charAt(i);
            let charLower = passLower.charAt(i);
            let charUpper = passUpper.charAt(i);

            if (charLower == charUpper)
            {
                continue;
            }
            else 
            { 
                if (charOrig == charUpper) 
                {
                    hasAnUpper = true;
                    break;
                }
            }
                     
        }
        if(hasAnUpper)
        {
            document.getElementById("validacionPass").setAttribute("hidden", "hidden");

        }
        else
        {
            document.getElementById("validacionPass").removeAttribute("hidden");
            document.getElementById("validacionPass").setAttribute("class", "text-danger");
            document.getElementById("validacionPass").innerHTML = "La Contraseña debe contener al menos una Mayúscula";
        }


    }


</script>
